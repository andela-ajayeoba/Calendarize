"use strict";var ApplicationConfiguration=function(){var applicationModuleName="task",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ngAnimate","mgcrea.ngStrap","ui.bootstrap","ui.utils","gantt","nsPopover"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("persons"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("tasks"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("persons").controller("PersonsController",["$http","$scope","$stateParams","$location","$timeout","Authentication","GANTT_EVENTS","$modal","Persons","SwitchViews",function($http,$scope,$stateParams,$location,$timeout,Authentication,GANTT_EVENTS,$modal,Persons,SwitchViews){$scope.authentication=Authentication,$scope.addPerson=function(closePersonPopover){closePersonPopover();var person=new Persons($scope.person);person.$save(function(response){if("Project"!==SwitchViews.state){$scope.person="";var newPerson=[{id:response._id,name:response.name,tasks:[]}];$scope.loadData(newPerson)}},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.removePerson=function(person){if(person){person.$remove();for(var i in $scope.persons)$scope.persons[i]===person&&$scope.persons.splice(i,1)}else $scope.person.$remove(function(){})},$scope.updatePerson=function(){var person=$scope.person;person.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.findPersons=function(){var data=[];$scope.persons=Persons.query({},function(){$scope.persons.forEach(function(user){var $user={};$user.tasks=[],$user.id=user._id,$user.name=user.name,user.tasks.forEach(function(task){var $task={};$task.id=task._id,$task.name=task.projectName,$task.from=task.startDate,$task.to=task.endDate,$task.color="#F1C232",$user.tasks.push($task)}),data.push($user)}),$scope.loadData(data)})},$scope.findOnePerson=function(){$scope.person=Persons.get({personId:$stateParams.personId})}}]),angular.module("persons").factory("Persons",["$resource",function($resource){return $resource("persons/:personId",{personId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").controller("ProjectsController",["$http","$scope","$stateParams","$location","$timeout","Authentication","GANTT_EVENTS","$modal","Projects","Tasks","SwitchViews",function($http,$scope,$stateParams,$location,$timeout,Authentication,GANTT_EVENTS,$modal,Projects,Tasks,SwitchViews){$scope.authentication=Authentication,$scope.addProject=function(closeProjectPopover){closeProjectPopover();var project=new Projects($scope.project);project.$save(function(response){if("Person"!==SwitchViews.state){$scope.project="";var newProject=[{id:response._id,name:response.name,tasks:[]}];$scope.loadData(newProject)}},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.removeProject=function(project){if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){})},$scope.updateProject=function(){var project=$scope.project;project.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tasks").controller("ModalInstanceCtrl",["$rootScope","$scope","$modalInstance","Projects","Persons","SwitchViews",function($rootScope,$scope,$modalInstance,Projects,Persons,SwitchViews){$scope.findData=function(){switch(SwitchViews.state){case"Project":$scope.datas=Persons.query();break;case"Person":$scope.datas=Projects.query()}},$scope.selectedData=function(data){$modalInstance.close(data)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("tasks").controller("TasksController",["$http","$scope","$stateParams","$location","$timeout","Authentication","Uuid","Sample","moment","GANTT_EVENTS","$modal","Persons","Projects","Tasks","SwitchViews",function($http,$scope,$stateParams,$location,$timeout,Authentication,Uuid,Sample,moment,GANTT_EVENTS,$modal,Persons,Projects,Tasks,SwitchViews){$scope.authentication=Authentication;var assignment={},autoView={resource:Persons};SwitchViews.state="Person",$scope.triggerModal=function(){var modalInstance=$modal.open({templateUrl:"/modules/core/views/assign_task_modal.client.view.html",controller:"ModalInstanceCtrl",size:"sm",resolve:{}});modalInstance.result.then(function(data){"Person"===SwitchViews.state?(assignment.projectId=data._id,assignment.projectName=data.name):(assignment.personId=data._id,assignment.personName=data.name),$scope.createTask(assignment)},function(){})},$scope.getTaskData=function(){var dataObj=[];$scope.dbData=autoView.resource.query({},function(){$scope.dbData.forEach(function(assign){var $label={};$label.tasks=[],$label.id=assign._id,$label.name=assign.name,assign.tasks.forEach(function(task){var $task={};$task.id=task._id,$task.from=task.startDate,$task.to=task.endDate,$task.color="#F1C232",$task.name="Person"===SwitchViews.state?task.projectName:task.personName,$label.tasks.push($task)}),dataObj.push($label)}),$scope.loadData(dataObj)})},$scope.createTask=function(data){var newTask={personId:data.personId,projectId:data.projectId,startDate:data.startDate,endDate:data.endDate},task=new Tasks(newTask);task.$save(function(response){var taskParam={id:response._id,from:response.startDate,to:response.endDate,color:"#F1C232"};taskParam.name="Person"===SwitchViews.state?response.projectName:response.personName;var uiItem=data.infoData.row.addTask(taskParam);uiItem.updatePosAndSize(),uiItem.row.updateVisibleTasks()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.updateTask=function(event,data){var task=Tasks.get({taskId:data.task.id});task._id=data.task.id,task.startDate=data.task.from,task.endDate=data.task.to,task.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.options={mode:"custom",scale:"day",maxHeight:!1,width:!0,autoExpand:"both",taskOutOfRange:"expand",fromDate:void 0,toDate:void 0,showLabelsColumn:!0,currentDate:"line",currentDateValue:Date.now(),draw:!0,allowLabelsResizing:!0,timeFrames:{day:{start:moment("8:00","HH:mm"),end:moment("20:00","HH:mm"),working:!0,"default":!0},noon:{start:moment("12:00","HH:mm"),end:moment("13:30","HH:mm"),working:!1,"default":!0},weekend:{working:!1}},dateFrames:{weekend:{evaluator:function(date){return 6===date.isoWeekday()||7===date.isoWeekday()},targets:["weekend"]}},timeFramesNonWorkingMode:"visible",columnMagnet:"5 minutes"},$scope.$watch("fromDate+toDate",function(){$scope.options.fromDate=$scope.fromDate,$scope.options.toDate=$scope.toDate}),$scope.$watch("options.scale",function(newValue,oldValue){angular.equals(newValue,oldValue)||("quarter"===newValue?($scope.options.headersFormats={quarter:"[Q]Q YYYY"},$scope.options.headers=["quarter"]):($scope.options.headersFormats=void 0,$scope.options.headers=void 0))}),$scope.$on(GANTT_EVENTS.READY,function(){$scope.addSamples(),$timeout(function(){$scope.scrollToDate($scope.options.currentDateValue)},0,!0)}),$scope.addSamples=function(){$scope.loadTimespans(Sample.getSampleTimespans().timespan1),$scope.getTaskData()},$scope.loadTabData=function(view){switch(SwitchViews.state=view,view){case"Person":autoView.resource=Persons;break;case"Project":autoView.resource=Projects}$scope.clearData(),$scope.getTaskData()};var handleClickEvent=function(event,data){switch(SwitchViews.state){case"Person":assignment.personId=data.row.id;break;case"Project":assignment.projectId=data.row.id}$scope.triggerModal(),$scope.options.draw&&(data.evt.target?data.evt.target:data.evt.srcElement).className.indexOf("gantt-row")>-1&&(assignment.startDate=data.date,assignment.endDate=moment(data.date).add(7,"d"),assignment.infoData=data)};$scope.$on(GANTT_EVENTS.TASK_DBL_CLICKED,function(event,data){data.task.row.removeTask(data.task.id),Tasks.delete({taskId:data.task.id})}),$scope.$on(GANTT_EVENTS.TASK_CHANGED,function(event,data){$scope.updateTask(event,data)}),$scope.$on(GANTT_EVENTS.TASK_MOVE_END,function(){}),$scope.$on(GANTT_EVENTS.TASK_RESIZE_END,$scope.updateTask),$scope.$on(GANTT_EVENTS.ROW_CLICKED,handleClickEvent)}]),angular.module("tasks").factory("Tasks",["$resource",function($resource){return $resource("tasks/:taskId",{taskId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tasks").factory("SwitchViews",["$rootScope",function(){return{state:""}}]),angular.module("tasks").service("Sample",function(){return{getSampleData:function(){return{}},getSampleTimespans:function(){return{timespan1:[{id:"1",from:new Date(2014,9,21,8,0,0),to:new Date(2014,11,25,15,0,0),name:"Sprint 1 Timespan"}]}}}}),angular.module("tasks").service("Uuid",function(){return{s4:function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)},randomUuid:function(){return this.s4()+this.s4()+"-"+this.s4()+"-"+this.s4()+"-"+this.s4()+"-"+this.s4()+this.s4()+this.s4()}}}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){response&&$location.path("/signin")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);